name: Publishing

on:
  push:
    branches:
      - develop
      - hotfix/*
      - release/*
    tags:
      - v*.*.*

jobs:
  build:
    name: Build
    runs-on: windows-latest
    environment: microsoft-store
    strategy:
      matrix:
        architecture:
          - x86
          - x64
          - arm64
        distribution:
          - app-store
          - standalone
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-${{ matrix.architecture }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.architecture }}-nuget-

      - name: Set Up MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Prepare files
        run: .\prepare.bat

      - name: Restore Nuget packages
        run: msbuild Fyreplace /t:Restore /p:Platform=${{ matrix.architecture }}

      - name: Build app
        if: ${{ matrix.distribution == 'app-store' }}
        env:
          PackageName: ${{ vars.PACKAGE_NAME }}
          PackagePublisher: ${{ vars.PACKAGE_PUBLISHER }}
          PackagePublisherName: ${{ vars.PACKAGE_PUBLISHER_NAME }}
          SentryDsn: ${{ secrets.SENTRY_DSN}}
          SentryOrg: ${{ vars.SENTRY_ORG }}
          SentryProject: ${{ vars.SENTRY_PROJECT }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          msbuild Fyreplace `
            /t:Build `
            /p:Platform=${{ matrix.architecture }} `
            /p:Configuration=Release `
            /p:GenerateAppxPackageOnBuild=True `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /p:AppxPackageDir=AppPackages\ `
            /p:PublishReadyToRun=false

      - name: Build app and installer
        if: ${{ matrix.distribution == 'standalone' }}
        env:
          PackageName: ${{ vars.PACKAGE_NAME }}
          PackagePublisher: ${{ vars.PACKAGE_PUBLISHER }}
          PackagePublisherName: ${{ vars.PACKAGE_PUBLISHER_NAME }}
        run: |
          msbuild Fyreplace.Installer `
            /t:Build `
            /p:Platform=${{ matrix.architecture }} `
            /p:Configuration=Release `
            /p:PublishReadyToRun=false

      - name: Simplify MSIX export path
        if: ${{ matrix.distribution == 'app-store' }}
        run: |
          move .\Fyreplace\AppPackages\* .\Fyreplace\AppPackages\Result
          move .\Fyreplace\AppPackages\Result\*.msix .\Fyreplace\AppPackages\Result\Fyreplace.msix

      - name: Upload MSIX
        if: ${{ matrix.distribution == 'app-store' }}
        uses: actions/upload-artifact@v4
        with:
          name: Fyreplace.${{ matrix.architecture }}.msix
          path: Fyreplace\AppPackages\Result\Fyreplace.msix
          if-no-files-found: error

      - name: Upload MSI
        if: ${{ matrix.distribution == 'standalone' }}
        uses: actions/upload-artifact@v4
        with:
          name: Fyreplace.${{ matrix.architecture }}.standalone.msi
          path: Fyreplace.Installer\bin\${{ matrix.architecture }}\Release\en\Fyreplace.msi
          if-no-files-found: error
